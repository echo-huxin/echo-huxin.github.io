<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/28/vue2.0%20v-for%E4%B8%ADkey%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <url>/2021/06/28/vue2.0%20v-for%E4%B8%ADkey%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<p>title: vue2.0 v-for中:key的注意点<br>date: 2021-06-22 20:41:13<br>tags:</p><hr><h1 id="vue2-0-v-for中-key的注意点"><a href="#vue2-0-v-for中-key的注意点" class="headerlink" title="vue2.0 v-for中:key的注意点"></a>vue2.0 v-for中:key的注意点</h1><h2 id="1-v-for注意点"><a href="#1-v-for注意点" class="headerlink" title="1.v-for注意点:"></a>1.v-for注意点:</h2><h4 id="核心要点总结"><a href="#核心要点总结" class="headerlink" title="核心要点总结:"></a>核心要点总结:</h4><ol><li><p><font color="red"><strong>v-for在渲染元素的时候,根据key值查看缓存中有没有需要渲染的元素</strong></font></p><p><font color="red"><strong>如果缓存中没有需要渲染的元素,就会创建一个新的放到缓存中,如果缓存中有需要渲染的元素,,直接复用对应key值存储的状态的</strong></font></p></li><li><p><font color="red"><strong>key属性注意点,不能使用index的作为key,因为当列表的内容新增或者删除时index都会发生变化,从而导致数据混乱</strong></font></p><p><font color="red"><strong>注意点:在vue中只要数据发生了改变,那么就会自动重新渲染</strong></font></p></li></ol><h3 id="例如-在列表前面新增了内容"><a href="#例如-在列表前面新增了内容" class="headerlink" title="例如: 在列表前面新增了内容"></a>例如: 在列表前面新增了内容</h3><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628193046570.png" alt="image-20210628193046570"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;!DOCTYPE html&gt;<br><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>34-Vue-v-for-key<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;name&quot;</span> /&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;添加&quot;</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">&quot;add&quot;</span> /&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(person,index) in persons&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;index&#125;&#125; --- &#123;&#123;person.name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="javascript"><span class="xml">      <span class="hljs-keyword">let</span> vue = <span class="hljs-keyword">new</span> Vue(&#123;</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">data</span>: &#123;</span></span><br><span class="javascript"><span class="xml">          <span class="hljs-attr">persons</span>: [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;zs&quot;</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ls&quot;</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ww&quot;</span> &#125;],</span></span><br><span class="javascript"><span class="xml">          <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,</span></span><br><span class="javascript"><span class="xml">        &#125;,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="javascript"><span class="xml">          <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-keyword">let</span> newPerson = &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.name &#125;;</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-comment">//追加到数组最尾部</span></span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">this</span>.persons.push(newPerson);</span></span><br><span class="javascript"><span class="xml">            <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;&quot;</span>;</span></span><br><span class="javascript"><span class="xml">          &#125;,</span></span><br><span class="javascript"><span class="xml">        &#125;,</span></span><br><span class="javascript"><span class="xml">        <span class="hljs-attr">computed</span>: &#123;&#125;,</span></span><br><span class="javascript"><span class="xml">      &#125;);</span></span><br><span class="javascript"><span class="xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628193138171.png" alt="image-20210628193138171"></p><p>我从输入框中输入个”zs”然后点击添加,发现并没有什么问题,但是如果我吧新添加的数据追加到数组最前面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript">methods: &#123;<br>         <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>           <span class="hljs-keyword">let</span> newPerson = &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.name &#125;;<br>           <span class="hljs-comment">//追加到数组最尾部</span><br>           <span class="hljs-comment">// this.persons.push(newPerson);</span><br>           <span class="hljs-comment">//追加到数组头部</span><br>           <span class="hljs-built_in">this</span>.persons.unshift(newPerson);<br>           <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;&quot;</span>;<br>         &#125;,<br><br>&#125;<br></code></pre></td></tr></table></figure><p>然后发现原本”zs”的选中状态,变成了新添加”zl”为选中状态,然后我查阅了许多资料,总结出以下3点</p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628192245104.png" alt="image-20210628192245104"></p><ol><li><p><font color="red"><strong>v-for在渲染元素的时候,会先查看缓存中有没有需要渲染的元素</strong></font></p></li><li><p><font color="red"><strong>如果缓存中没有需要渲染的元素,就会创建一个新的放到缓存中,如果缓存中有需要渲染的元素,就不会创建一个新的,而是直接复用原有的</strong></font></p><p> <font color="red"><strong>注意点:在vue中只要数据发生了改变,那么就会自动重新渲染</strong></font></p></li></ol><p>当我们向persons数组头部追加一条新数据”zl”的时候,vue中的数据发生改变v-for重新渲染数据会先去查看缓存中有没有保存了,当前元素”:key”属性对应的”key”值,如果有就直接复用,如果没有就会在缓存中创建一个新的,所以”zl”没有添加之前,”ls”对应的key值是0,因为”zl”被加入到数组头部,导致”ls”对应的key值改为了1,所以出现”zl”数据的添加,”zs”变为了选择状态</p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628193804876.png" alt="image-20210628193804876"></p><ol start="3"><li><font color="red"><strong>key属性注意点,不能使用index的作为key,因为当列表的内容新增或者删除时index都会发生变化</strong></font></li></ol><p>为了解决这个问题, 我们可以在渲染列表的时候给每一个元素加上一个独一无二的key,设置一个id属性,这样就不会出现数据混乱了</p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628200052312.png" alt="image-20210628200052312"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">&quot;app&quot;</span>&gt;<br>    &lt;form&gt;<br>        &lt;input type=&quot;text&quot; v-model=&quot;name&quot;&gt;<br>        &lt;input type=&quot;submit&quot; value=&quot;添加&quot; @click.prevent=&quot;add&quot;&gt;<br>    &lt;/form&gt;<br>    &lt;ul&gt;<br>       &lt;li v-for=&quot;(person,index) in persons&quot; :key=&quot;person.id&quot;&gt;<br>        &lt;!-- &lt;li v-for=&quot;(person,index) in persons&quot; :key=&quot;index&quot;&gt; --&gt;<br>            &lt;input type=&quot;checkbox&quot;&gt;<br>            &lt;span&gt;&#123;&#123;index&#125;&#125; --- &#123;&#123;person.name&#125;&#125;&lt;/span&gt;<br>        &lt;/li&gt;<br>    &lt;/ul&gt;<br>&lt;/div&gt;<br><br> let vue = new Vue(&#123;<br>        el: &#x27;#app&#x27;,<br>data: &#123;<br>            persons: [<br>                &#123;name: &quot;zs&quot;, id: 1&#125;,<br>                &#123;name: &quot;ls&quot;, id: 2&#125;,<br>                &#123;name: &quot;ww&quot;, id: 3&#125;<br>                ],<br>            name: &quot;&quot;<br>        &#125;<br>   methods: &#123;<br>            add()&#123;<br>                //获取persons最后一位的id值<br>                let lastPerson = this.persons[this.persons.length - 1];<br>                let newPerson = &#123;name: this.name, id: lastPerson.id + 1&#125;;<br>                // this.persons.push(newPerson);<br>                this.persons.unshift(newPerson);<br>                this.name = &quot;&quot;;<br>            &#125;<br>        &#125;<br>        &#125;);<br></code></pre></td></tr></table></figure><p> **注意!**上述代码存还存在一个问题,就是当我们添加一条数据,将新添加的数据为选中状态,会出现</p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628200932052.png" alt="image-20210628200932052"></p><p><img src="/../../../../AppData/Roaming/Typora/typora-user-images/image-20210628200943057.png" alt="image-20210628200943057"></p><p>因为persons最后一位一直都是”ww”,id为3,所以出现了key值重复,以下为更正后的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> vue = <span class="hljs-keyword">new</span> Vue(&#123;<br>  <span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,<br>  <span class="hljs-attr">data</span>: &#123;<br>    <span class="hljs-attr">persons</span>: [<br>      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;zs&quot;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">1</span> &#125;,<br>      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ls&quot;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">2</span> &#125;,<br>      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;ww&quot;</span>, <span class="hljs-attr">id</span>: <span class="hljs-number">3</span> &#125;,<br>    ],<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-comment">//设置属性id保存唯一变量</span><br>    <span class="hljs-attr">id</span>: <span class="hljs-number">0</span>,<br>  &#125;,<br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-function"><span class="hljs-title">add</span>(<span class="hljs-params"></span>)</span> &#123;<br>      <span class="hljs-built_in">this</span>.id = <span class="hljs-built_in">this</span>.persons.length + <span class="hljs-number">1</span>;<br>      <span class="hljs-keyword">let</span> newPerson = &#123; <span class="hljs-attr">name</span>: <span class="hljs-built_in">this</span>.name, <span class="hljs-attr">id</span>: <span class="hljs-built_in">this</span>.id &#125;;<br>      <span class="hljs-comment">// this.persons.push(newPerson);</span><br>      <span class="hljs-built_in">this</span>.persons.unshift(newPerson);<br>      <span class="hljs-built_in">this</span>.name = <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;,<br>  &#125;,<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/../images/image-20210815180630489.png" alt="image-20210815180630489"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客文章</title>
    <link href="/2021/06/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2021/06/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<hr><p>##第一章</p><p>内容</p><hr><p>##第二章</p><p>内容</p><hr><p>##参考文献</p><p><a href="http://www.codesheep.cn/">www.codesheep.cn</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/06/22/hello-world/"/>
    <url>/2021/06/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
